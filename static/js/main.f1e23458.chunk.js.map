{"version":3,"sources":["components/ScatterPlot.tsx","components/DatasetsDisplay.tsx","components/ChartOptions.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["rand_x","Math","round","random","rand_y","data","datasets","label","x","y","backgroundColor","radius","hoverRadius","borderColor","borderWidth","ScatterPlot","className","options","maintainAspectRatio","aspectRatio","datasetItems","map","dataset","Button","variant","DatasetsDisplay","validation_rates","values","ChartOptions","DropdownButton","id","title","valid","Dropdown","Item","href","value","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1e23458.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ScatterPlot.css';\r\nimport {Scatter} from 'react-chartjs-2'\r\n\r\nconst rand_x = () => Math.round(Math.random() * 100 );\r\nconst rand_y = () => Math.round(Math.random()* 100);\r\nconst data = {\r\n    datasets: [\r\n      {\r\n        label: 'A dataset',\r\n        data: [\r\n          { x: rand_x(), y: rand_y() },\r\n          { x: rand_x(), y: rand_y() },\r\n          { x: rand_x(), y: rand_y() },\r\n          { x: rand_x(), y: rand_y() },\r\n          { x: rand_x(), y: rand_y() },\r\n          { x: rand_x(), y: rand_y() },\r\n          { x: rand_x(), y: rand_y() },\r\n          { x: rand_x(), y: rand_y() },\r\n          { x: rand_x(), y: rand_y() },\r\n          { x: rand_x(), y: rand_y() },\r\n\r\n        ],\r\n        backgroundColor: 'rgba(0, 0, 222, 1)',\r\n        radius: 10,\r\n        hoverRadius:10,\r\n        borderColor:'black',\r\n        borderWidth: 4,\r\n      },\r\n      {\r\n        label: 'A dataset2',\r\n        data: [\r\n          { x: rand_x(), y: rand_y() },\r\n          { x: rand_x(), y: rand_y() },\r\n          { x: rand_x(), y: rand_y() },\r\n          { x: rand_x(), y: rand_y() },\r\n          { x: rand_x(), y: rand_y() },\r\n          {x:1,y:90},\r\n          { x: rand_x(), y: rand_y() },\r\n          { x: rand_x(), y: rand_y() },\r\n          { x: rand_x(), y: rand_y() },\r\n          { x: rand_x(), y: rand_y() },\r\n          { x: rand_x(), y: rand_y() },\r\n\r\n        ],\r\n        backgroundColor: 'rgba(220, 0, 0, 1)',\r\n        radius: 10,\r\n        hoverRadius:10,\r\n        borderColor:'black',\r\n        borderWidth: 4,\r\n      }\r\n    ],\r\n    \r\n  };\r\n  \r\n\r\n\r\nconst ScatterPlot = () => {\r\n    return <div className=\"plot-height\">\r\n\r\n    <Scatter \r\n    data={data} \r\n    options ={{\r\n        maintainAspectRatio:false,\r\n        aspectRatio:1,\r\n    }}\r\n     \r\n    \r\n     />\r\n    </div>\r\n}\r\n\r\nexport default ScatterPlot","import React from 'react'\r\nimport './DatasetsDisplay.css';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst datasets:string[] =['iris','pima','vehicle','australian','wine','newthyroid','satimage','iris','pima','vehicle','australian','wine','newthyroid','satimage','iris','pima','vehicle','australian','wine','newthyroid','satimage','iris','pima','vehicle','australian','wine','newthyroid','satimage'];\r\nconst datasetItems = datasets.map((dataset) => <Button variant=\"info\"  className=\"myButton\"> {dataset}</Button>)\r\nfunction DatasetsDisplay() {\r\n    return (\r\n        <div className=\"datasetsDisplay\">\r\n            {datasetItems}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DatasetsDisplay\r\n","import { DropdownButton,Dropdown,Button } from \"react-bootstrap\"\r\nimport './ChartOptions.css';\r\n\r\nconst validation_rates =['0.9','0.8','0.7','0.5','0.3','0.2','0.1']\r\nconst  MOP = ['MOP1','MOP7']\r\nconst crossvalidation = ['SCV','DOBSCV']\r\nconst values = ['Dtra','Dsubtra','Dvalid','Dtst']\r\n\r\n\r\n\r\nexport default function ChartOptions() {\r\n    return (\r\n        <div className=\"divider\">\r\n            <div className=\"dropdowns\">\r\n            <DropdownButton id=\"dropdown-basic-button\" title=\"Validation Rate\">\r\n                {validation_rates.map((valid) => (\r\n                <Dropdown.Item href=\"\">{valid}</Dropdown.Item>))}\r\n            </DropdownButton>\r\n           \r\n                <br></br>\r\n            <DropdownButton id=\"dropdown-basic-button\" title=\"Sub-Dataset\">\r\n                {values.map((value) => (\r\n                <Dropdown.Item href=\"\">{value}</Dropdown.Item>))}\r\n            </DropdownButton>\r\n            </div>\r\n           <div>\r\n            \r\n           <Button variant=\"primary\"> Add </Button>   \r\n            </div>    \r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ScatterPlot from './components/ScatterPlot';\nimport DatasetsDisplay from './components/DatasetsDisplay';\nimport ChartOptions from './components/ChartOptions';\n\nimport './App.css';\nimport { Container } from 'react-bootstrap';\n\nfunction App() {\n  return (\n    <div>\n      <h1> Charts for MoFGBML</h1>\n      \n      <DatasetsDisplay />\n      <div className=\"container-fluid h-100\">\n        <div className=\"row justify-content-center\">\n        <div className=\"col-9\">\n          <ScatterPlot />\n        </div>\n        <div className =\"col-3\">\n          <ChartOptions />\n        </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}